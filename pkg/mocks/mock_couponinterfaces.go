// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/repository/interfaces/couponInterfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/munsheerck79/Ecom_project.git/pkg/domain"
	request "github.com/munsheerck79/Ecom_project.git/util/request"
)

// MockCouponRepository is a mock of CouponRepository interface.
type MockCouponRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCouponRepositoryMockRecorder
}

// MockCouponRepositoryMockRecorder is the mock recorder for MockCouponRepository.
type MockCouponRepositoryMockRecorder struct {
	mock *MockCouponRepository
}

// NewMockCouponRepository creates a new mock instance.
func NewMockCouponRepository(ctrl *gomock.Controller) *MockCouponRepository {
	mock := &MockCouponRepository{ctrl: ctrl}
	mock.recorder = &MockCouponRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCouponRepository) EXPECT() *MockCouponRepositoryMockRecorder {
	return m.recorder
}

// AddCoupon mocks base method.
func (m *MockCouponRepository) AddCoupon(c context.Context, body domain.Coupon) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCoupon", c, body)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddCoupon indicates an expected call of AddCoupon.
func (mr *MockCouponRepositoryMockRecorder) AddCoupon(c, body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCoupon", reflect.TypeOf((*MockCouponRepository)(nil).AddCoupon), c, body)
}

// EditCoupon mocks base method.
func (m *MockCouponRepository) EditCoupon(c context.Context, body request.EditCoupon) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EditCoupon", c, body)
	ret0, _ := ret[0].(error)
	return ret0
}

// EditCoupon indicates an expected call of EditCoupon.
func (mr *MockCouponRepositoryMockRecorder) EditCoupon(c, body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EditCoupon", reflect.TypeOf((*MockCouponRepository)(nil).EditCoupon), c, body)
}

// GetCoupon mocks base method.
func (m *MockCouponRepository) GetCoupon(c context.Context) ([]domain.Coupon, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoupon", c)
	ret0, _ := ret[0].([]domain.Coupon)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCoupon indicates an expected call of GetCoupon.
func (mr *MockCouponRepositoryMockRecorder) GetCoupon(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoupon", reflect.TypeOf((*MockCouponRepository)(nil).GetCoupon), c)
}

// GetCouponByCode mocks base method.
func (m *MockCouponRepository) GetCouponByCode(c context.Context, code string) (domain.Coupon, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCouponByCode", c, code)
	ret0, _ := ret[0].(domain.Coupon)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCouponByCode indicates an expected call of GetCouponByCode.
func (mr *MockCouponRepositoryMockRecorder) GetCouponByCode(c, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCouponByCode", reflect.TypeOf((*MockCouponRepository)(nil).GetCouponByCode), c, code)
}
