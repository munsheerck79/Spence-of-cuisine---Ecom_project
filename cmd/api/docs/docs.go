// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/home": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "api for Admin home page",
                "operationId": "AdminHome",
                "responses": {
                    "200": {
                        "description": "Login successful,welcome to home"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "api for Admin login",
                "operationId": "AdminLogin",
                "parameters": [
                    {
                        "description": "Input Fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginAdminData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "api for Admin logout",
                "operationId": "LogOutAdmin",
                "responses": {
                    "200": {
                        "description": "Logot successful"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "failed to send OTP"
                    }
                }
            }
        },
        "/admin/order/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin.OrderDash"
                ],
                "summary": "api for get order list",
                "operationId": "ListOrder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Count Of Order",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": " get order list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AdminOrderList"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/order/addcoupon": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.Coupon"
                ],
                "summary": "api for admin to add coupon",
                "operationId": "AddCoupon",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddCoupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "coupon added successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/order/cancelorder": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.OrderDash"
                ],
                "summary": "API for canceling an order",
                "operationId": "CancelOrderAdmin",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CancelOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cancel order successful"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/order/coupon": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin.Coupon"
                ],
                "summary": "api for get coupons for admin and user",
                "operationId": "GetCouponAdmin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Coupon"
                        }
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/order/editcoupon": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "edit coupon",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin.Coupon"
                ],
                "summary": "API for edit coupon by admin",
                "operationId": "EditCoupon",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EditCoupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully address added"
                    },
                    "400": {
                        "description": "string \"Invalid input"
                    }
                }
            }
        },
        "/admin/order/updateorderstatus/delivered": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin.OrderStatus"
                ],
                "summary": "order delivered status",
                "operationId": "OrderDelivered",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "orderid",
                        "name": "orderID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "userid",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated order status"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/order/updateorderstatus/refund": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin.OrderStatus"
                ],
                "summary": "refund process of return product",
                "operationId": "ReturnRefund",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "orderid",
                        "name": "orderID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "userid",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated order status"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/order/updateorderstatus/returnrequestaccept": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin.OrderStatus"
                ],
                "summary": "refund process of return request verified",
                "operationId": "RetreturnRequestAccept",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "orderid",
                        "name": "orderID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "userid",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated order status"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/order/updateorderstatus/shipped": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin.OrderStatus"
                ],
                "summary": "order shipped status",
                "operationId": "OrderShipped",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "orderid",
                        "name": "orderID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "userid",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated order status"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/order/updaterderstatus": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NotUse"
                ],
                "summary": "api for update order status of a user/order by using id",
                "operationId": "UpdateOrderStatus",
                "parameters": [
                    {
                        "description": "Input Fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpDateOrderStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated order status"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/otp-verify": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "api for Admin otp verification",
                "operationId": "OtpVerify",
                "parameters": [
                    {
                        "description": "Input Fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OTPVerify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "failed to send OTP"
                    }
                }
            }
        },
        "/admin/product/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "API for admin or user to list all products",
                "operationId": "ProductListAdmin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Count Of Order",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductDetails"
                        }
                    },
                    "204": {
                        "description": "No products to show"
                    },
                    "500": {
                        "description": "Failed to get all products"
                    }
                }
            }
        },
        "/admin/product/EditProduct": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "api for admin to edit product",
                "operationId": "EditProduct",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EditProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "edited successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    }
                }
            }
        },
        "/admin/product/addcategory": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "api for admin to add catogory",
                "operationId": "AddCategory",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddCatogory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category added successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/product/addorderstatus": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.OrderDash"
                ],
                "summary": "api for admin to add status",
                "operationId": "AddOrderStatus",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.OrderStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status added successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/product/addprice": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "api for admin to add price",
                "operationId": "AddPrice",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddPrice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "price added successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    }
                }
            }
        },
        "/admin/product/addproduct": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "api for admin to add product",
                "operationId": "AddProduct",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product added successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/product/addvariation": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "api for admin to add varient",
                "operationId": "AddVarient",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddVarient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "varient added successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/product/category": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get category list for admin and user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "API for get category list",
                "operationId": "GetCategoryAdmin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "string \"Invalid input"
                    }
                }
            }
        },
        "/admin/product/editprice": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "api for admin to edit price",
                "operationId": "EditPrice",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EditPrice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "edited successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/product/getproductbyid": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetProduct list for admin and user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Product"
                ],
                "summary": "Get a product by ID",
                "operationId": "GetProductAdmin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "productID",
                        "name": "ID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductDetails"
                        }
                    },
                    "400": {
                        "description": "can't get product",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/product/listproductsbycatogory": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetProduct list for admin and user by using name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "Get a product by name",
                "operationId": "GetProductsByCategoryNameAdmin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category",
                        "name": "Name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductDetails"
                        }
                    },
                    "204": {
                        "description": "didnt get catogory name"
                    },
                    "400": {
                        "description": "can't get product",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/product/orderstatus": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get order status list for admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin.OrderDash"
                ],
                "summary": "API for get order status list",
                "operationId": "GetOrderStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.OrderStatus"
                            }
                        }
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/product/variation": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get variation list for admin and user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin.ProductDash"
                ],
                "summary": "API for get variation list",
                "operationId": "Getvariations",
                "responses": {
                    "200": {
                        "description": "Successfully grt variation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Variation"
                            }
                        }
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/salesreport": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "api for admin to download sales report as csv format",
                "operationId": "SalesReport",
                "parameters": [
                    {
                        "description": "Input Fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DateRange"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Missing or Invalid inputs"
                    },
                    "500": {
                        "description": "Something went wrong! failed to generate sales report"
                    }
                }
            }
        },
        "/admin/users/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.UserDash"
                ],
                "summary": "api for getuserlist",
                "operationId": "ListUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Count Of Order",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/domain.Users"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/admin/users/blockuser": {
            "patch": {
                "tags": [
                    "Admin.UserDash"
                ],
                "summary": "api for admin to block or unblock user",
                "operationId": "BlockUser",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BlockUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed user block_status",
                        "schema": {
                            "$ref": "#/definitions/request.BlockUser"
                        }
                    },
                    "400": {
                        "description": "invalid input"
                    }
                }
            }
        },
        "/admin/users/userdetails": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Admin.UserDash"
                ],
                "summary": "api for get user details for admin",
                "parameters": [
                    {
                        "description": "Input Fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get user details",
                        "schema": {
                            "$ref": "#/definitions/response.UserDetails"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    }
                }
            }
        },
        "/user/addaddress": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User.Details"
                ],
                "summary": "API for user to get address",
                "operationId": "GetAddress",
                "responses": {
                    "200": {
                        "description": "get address sucsessfully",
                        "schema": {
                            "$ref": "#/definitions/domain.Address"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a new address from the user to store in the database",
                "tags": [
                    "User.Details"
                ],
                "summary": "API for adding a new address for a user",
                "operationId": "AddAddress",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully address added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/cart/addtocart": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "user can add a product to cart",
                "tags": [
                    "User.Cart"
                ],
                "summary": "api for add product to user cart",
                "operationId": "AddToCart",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Cart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly added product item to cart "
                    },
                    "406": {
                        "description": "StatusNotAcceptable,invalid input!! "
                    },
                    "500": {
                        "description": "Failed to add product item in cart"
                    }
                }
            }
        },
        "/user/cart/deletefromcart/:ID": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete cart items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Cart"
                ],
                "summary": "API for delete cart product",
                "operationId": "DeleteFromCart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "ID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully deleted from cart"
                    },
                    "400": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/user/cart/editcart": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "edit cart items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Cart"
                ],
                "summary": "API for edit cart product",
                "operationId": "EditCartProduct",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EditCart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "edited successfully"
                    },
                    "400": {
                        "description": "Something went wrong !"
                    },
                    "406": {
                        "description": "StatusNotAcceptable,invalid input!! "
                    }
                }
            }
        },
        "/user/cart/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get cart list pf autherised user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Cart"
                ],
                "summary": "API for get cart list",
                "operationId": "ListCart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListCartResponse"
                        }
                    },
                    "400": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/user/coupon": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "api for get coupons for admin and user",
                "operationId": "GetCoupon",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Coupon"
                        }
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/user/editaddress": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User.Details"
                ],
                "summary": "API for editing address for a user",
                "operationId": "EditAddress",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EditAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully address added"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/user/getwallet": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get wallet history of user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Payment"
                ],
                "summary": "Get wallet history",
                "operationId": "GetWallet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WalletRes"
                        }
                    },
                    "400": {
                        "description": "can't get product"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "after user login user will seen this page with user informations using mid.ware",
                "tags": [
                    "User"
                ],
                "summary": "api for user home page",
                "operationId": "UserHome",
                "responses": {
                    "200": {
                        "description": "Login successfully !"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "api for user login",
                "operationId": "UserLogin",
                "parameters": [
                    {
                        "description": "Input Fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoignUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "api for logout",
                "operationId": "LogoutUser",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/user/order/cancelorder": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User.Order"
                ],
                "summary": "API for canceling an order",
                "operationId": "CancelOrder",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CancelOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cancel order successful"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/user/order/checkout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "place order",
                "tags": [
                    "NotUse"
                ],
                "summary": "API for order cart products",
                "operationId": "OrderCartProducts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coupon",
                        "name": "coupon",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pay method",
                        "name": "payMethod",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "html added",
                        "schema": {
                            "$ref": "#/definitions/response.Order"
                        }
                    },
                    "400": {
                        "description": "somthing wrong!!"
                    },
                    "406": {
                        "description": "string \"Invalid input"
                    }
                }
            }
        },
        "/user/order/checkout/cod": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "place order by cod method",
                "tags": [
                    "User.Order"
                ],
                "summary": "API for order cart products using cod",
                "operationId": "OrderCartProductsByCOD",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coupon",
                        "name": "coupon",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "html added",
                        "schema": {
                            "$ref": "#/definitions/response.Order"
                        }
                    },
                    "400": {
                        "description": "somthing wrong!!"
                    },
                    "406": {
                        "description": "string \"Invalid input"
                    }
                }
            }
        },
        "/user/order/checkout/wallet": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "place order",
                "tags": [
                    "User.Order"
                ],
                "summary": "API for order cart products by using vallet",
                "operationId": "OrderCartProductsByWallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coupon",
                        "name": "coupon",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "html added",
                        "schema": {
                            "$ref": "#/definitions/response.Order"
                        }
                    },
                    "400": {
                        "description": "somthing wrong!!"
                    },
                    "406": {
                        "description": "string \"Invalid input"
                    }
                }
            }
        },
        "/user/order/confirm-details": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Order"
                ],
                "summary": "API for checking all details for buying cart products",
                "operationId": "BuyProduct",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CheckoutResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    }
                }
            }
        },
        "/user/order/invoice/:orderID": {
            "get": {
                "description": "Download the invoice as a PDF file.",
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "User.Order"
                ],
                "summary": "Download invoice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "faild"
                    },
                    "500": {
                        "description": "faild"
                    }
                }
            }
        },
        "/user/order/orderdetails": {
            "get": {
                "description": "order details get by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Order"
                ],
                "summary": "order details get by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Orders1"
                        }
                    },
                    "400": {
                        "description": "faild"
                    },
                    "500": {
                        "description": "faild"
                    }
                }
            }
        },
        "/user/order/orderhistory": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User.Order"
                ],
                "summary": "api for list orderitems",
                "operationId": "OrderHistory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Count Of Order",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Order"
                        }
                    },
                    "400": {
                        "description": "Failed to list order history"
                    }
                }
            }
        },
        "/user/order/payment/addmonytowallet": {
            "get": {
                "description": "Make payment using razorpay page .",
                "tags": [
                    "User.Payment"
                ],
                "summary": "Make payment razorpay",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Amount",
                        "name": "Amount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "faild"
                    }
                }
            }
        },
        "/user/order/payment/checkout/razorpay": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User.Payment"
                ],
                "summary": "api for user pay section",
                "operationId": "RazorPayCheckout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coupon",
                        "name": "coupon",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "html added successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "404": {
                        "description": "invalid "
                    }
                }
            }
        },
        "/user/order/payment/razorpay/process-order": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Verify razorpay payment using razorpay credentials .",
                "tags": [
                    "User"
                ],
                "summary": "api for user pay section",
                "operationId": "ProccessRazorpayOrder",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "faild"
                    },
                    "406": {
                        "description": "invalid input"
                    }
                }
            }
        },
        "/user/order/returnorder": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Order"
                ],
                "summary": "api for return order",
                "operationId": "ReturnOrder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "orderID",
                        "name": "orderID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "requst to return successfully"
                    },
                    "400": {
                        "description": "Missing or invalid entry/error"
                    }
                }
            }
        },
        "/user/otp-verify": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "api for user otp verification",
                "operationId": "UserOtpVerify",
                "parameters": [
                    {
                        "description": "Input Fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OTPVerify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "400": {
                        "description": "Missing or invalid entry"
                    },
                    "401": {
                        "description": "failed to send OTP"
                    },
                    "500": {
                        "description": "detect error"
                    }
                }
            }
        },
        "/user/product/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Product"
                ],
                "summary": "API for admin or user to list all products",
                "operationId": "ProductList",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Count Of Order",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductDetails"
                        }
                    },
                    "204": {
                        "description": "No products to show"
                    },
                    "500": {
                        "description": "Failed to get all products"
                    }
                }
            }
        },
        "/user/product/category": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get category list for admin and user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Product"
                ],
                "summary": "API for get category list",
                "operationId": "GetCategory",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "string \"Invalid input"
                    }
                }
            }
        },
        "/user/product/listproductbyid": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetProduct list for admin and user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Product"
                ],
                "summary": "Get a product by ID",
                "operationId": "GetProduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "productID",
                        "name": "ID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductDetails"
                        }
                    },
                    "400": {
                        "description": "can't get product",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/product/listproductsbycatogory": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetProduct list for admin and user by using name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User.Product"
                ],
                "summary": "Get a product by name",
                "operationId": "GetProductsByCategoryName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category",
                        "name": "Name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductDetails"
                        }
                    },
                    "204": {
                        "description": "didnt get catogory name"
                    },
                    "400": {
                        "description": "can't get product",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "api for register user",
                "operationId": "UserSignUp",
                "parameters": [
                    {
                        "description": "Input Fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SignupUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account created successfuly"
                    },
                    "400": {
                        "description": "invalid input"
                    }
                }
            }
        },
        "/user/wishlist/addtowishlist": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "user can add a stock in product to wishlist",
                "tags": [
                    "User.Wishlist"
                ],
                "summary": "api for add product item to user wishlist",
                "operationId": "AddToWishList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "ID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly added product item to wish "
                    },
                    "400": {
                        "description": "Failed to add product item in wish"
                    }
                }
            }
        },
        "/user/wishlist/deletefromwishlist/:WishlistID": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete wishlist items",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User.Wishlist"
                ],
                "summary": "API for delete wishlist product",
                "operationId": "DeleteFromWishLIst",
                "parameters": [
                    {
                        "type": "string",
                        "description": "WishlistID",
                        "name": "WishlistID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "string \"Invalid input"
                    },
                    "500": {
                        "description": "Something went wrong !"
                    }
                }
            }
        },
        "/user/wishlist/show": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "User.Wishlist"
                ],
                "summary": "api for list product items in the wishlist",
                "operationId": "ListWishList",
                "responses": {
                    "200": {
                        "description": "get list",
                        "schema": {
                            "$ref": "#/definitions/response.ProductDetails"
                        }
                    },
                    "400": {
                        "description": "Failed to list product item in wishlist"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Address": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "land_mark": {
                    "type": "string"
                },
                "muncipality": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pin_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "users_id": {
                    "type": "integer"
                }
            }
        },
        "domain.Cart": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "type": "integer"
                },
                "Variation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "users_id": {
                    "type": "integer"
                }
            }
        },
        "domain.Category": {
            "type": "object",
            "properties": {
                "category_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Coupon": {
            "type": "object",
            "required": [
                "code",
                "discount_max_amount",
                "discount_percent",
                "min_order_value",
                "valid_days"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 4
                },
                "description": {
                    "type": "string"
                },
                "discount_max_amount": {
                    "type": "number"
                },
                "discount_percent": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "min_order_value": {
                    "type": "number"
                },
                "valid_days": {
                    "type": "integer"
                }
            }
        },
        "domain.OrderStatus": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "domain.Users": {
            "type": "object",
            "required": [
                "age",
                "email",
                "first_name",
                "last_name",
                "password",
                "phone",
                "user_name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "block_status": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 2
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 10
                },
                "updated_at": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "domain.Variation": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "VariationIndex uint      ` + "`" + `json:\"variation_index\" gorm:\"unique;not null\"` + "`" + `",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handler.CheckoutResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/domain.Address"
                },
                "cart": {
                    "$ref": "#/definitions/domain.Cart"
                }
            }
        },
        "handler.ListCartResponse": {
            "type": "object",
            "properties": {
                "discountPrice": {
                    "type": "number"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Cart"
                    }
                },
                "totalPrice": {
                    "type": "number"
                }
            }
        },
        "request.AddCatogory": {
            "type": "object",
            "required": [
                "category_name"
            ],
            "properties": {
                "category_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "request.AddCoupon": {
            "type": "object",
            "required": [
                "code",
                "discount_max_amount",
                "discount_percent",
                "min_order_value",
                "valid_days"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 4
                },
                "description": {
                    "type": "string"
                },
                "discount_max_amount": {
                    "type": "number"
                },
                "discount_percent": {
                    "type": "integer"
                },
                "min_order_value": {
                    "type": "number"
                },
                "valid_days": {
                    "type": "integer"
                }
            }
        },
        "request.AddPrice": {
            "type": "object",
            "required": [
                "discount_price",
                "price",
                "product_ID",
                "variation_id"
            ],
            "properties": {
                "discount_price": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "product_ID": {
                    "type": "integer"
                },
                "variation_id": {
                    "type": "integer"
                }
            }
        },
        "request.AddProduct": {
            "type": "object",
            "required": [
                "Code",
                "category_id",
                "description",
                "image",
                "product_name",
                "qty_in_stock"
            ],
            "properties": {
                "Code": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "maxLength": 400,
                    "minLength": 2
                },
                "image": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                },
                "qty_in_stock": {
                    "type": "integer"
                }
            }
        },
        "request.AddVarient": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "request.Address": {
            "type": "object",
            "required": [
                "address",
                "district",
                "land_mark",
                "muncipality",
                "phone_number",
                "pin_code",
                "state"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 5
                },
                "district": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 4
                },
                "land_mark": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 4
                },
                "muncipality": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 4
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 10
                },
                "pin_code": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 6
                },
                "state": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 4
                }
            }
        },
        "request.BlockUser": {
            "type": "object",
            "required": [
                "user_id",
                "user_name"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "request.CancelOrder": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "users_id": {
                    "type": "integer"
                }
            }
        },
        "request.Cart": {
            "type": "object",
            "required": [
                "Variation_id",
                "product_id"
            ],
            "properties": {
                "Quantity": {
                    "type": "integer"
                },
                "Variation_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "request.DateRange": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "request.EditAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "land_mark": {
                    "type": "string"
                },
                "muncipality": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pin_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "request.EditCart": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "Quantity": {
                    "type": "integer"
                },
                "Variation_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "request.EditCoupon": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_max_amount": {
                    "type": "number"
                },
                "discount_percent": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "min_order_value": {
                    "type": "number"
                },
                "valid_days": {
                    "type": "integer"
                }
            }
        },
        "request.EditPrice": {
            "type": "object",
            "required": [
                "discount_price",
                "price",
                "product_ID",
                "variation_id"
            ],
            "properties": {
                "discount_price": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "product_ID": {
                    "type": "integer"
                },
                "variation_id": {
                    "type": "integer"
                }
            }
        },
        "request.EditProduct": {
            "type": "object",
            "required": [
                "Code"
            ],
            "properties": {
                "Code": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "qty_in_stock": {
                    "type": "integer"
                },
                "stock_status": {
                    "type": "boolean"
                }
            }
        },
        "request.LoginAdminData": {
            "type": "object",
            "required": [
                "email",
                "password",
                "user_name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "request.LoignUserData": {
            "type": "object",
            "required": [
                "email",
                "password",
                "user_name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "request.OTPVerify": {
            "type": "object",
            "required": [
                "otp",
                "user_id"
            ],
            "properties": {
                "otp": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 4
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.SignupUserData": {
            "type": "object",
            "required": [
                "age",
                "confirm_password",
                "email",
                "first_name",
                "last_name",
                "password",
                "phone",
                "user_name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "confirm_password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 10
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "request.UpDateOrderStatus": {
            "type": "object",
            "required": [
                "order_id",
                "status",
                "users_id"
            ],
            "properties": {
                "order_id": {
                    "type": "integer"
                },
                "order_status_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "users_id": {
                    "type": "integer"
                }
            }
        },
        "request.UserDetails": {
            "type": "object",
            "required": [
                "user_id",
                "user_name"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "response.AdminOrderList": {
            "type": "object",
            "properties": {
                "actual_price": {
                    "type": "number"
                },
                "disc_price": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "net_amount": {
                    "type": "number"
                },
                "order_date": {
                    "type": "string"
                },
                "order_status_id": {
                    "type": "integer"
                },
                "payment_method": {
                    "type": "string"
                },
                "users_id": {
                    "type": "integer"
                }
            }
        },
        "response.Cart": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "type": "integer"
                },
                "Variation_name": {
                    "type": "string"
                },
                "actual_price": {
                    "type": "number"
                },
                "discount_price": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "qty_in_stock": {
                    "type": "integer"
                }
            }
        },
        "response.Order": {
            "type": "object",
            "properties": {
                "Razor_pay_order_id": {
                    "type": "string"
                },
                "actual_price": {
                    "type": "number"
                },
                "disc_price": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "net_amount": {
                    "type": "number"
                },
                "order_date": {
                    "type": "string"
                },
                "order_status_id": {
                    "type": "integer"
                },
                "payment_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "users_id": {
                    "type": "integer"
                }
            }
        },
        "response.Orders1": {
            "type": "object",
            "properties": {
                "actual_price": {
                    "type": "number"
                },
                "coupon_code": {
                    "type": "string"
                },
                "disc_price": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "description": "Use jsonb type for JSON data",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Cart"
                    }
                },
                "net_amount": {
                    "type": "number"
                },
                "order_date": {
                    "type": "string"
                },
                "order_status_name": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                }
            }
        },
        "response.Prices": {
            "type": "object",
            "properties": {
                "Variation_Name": {
                    "type": "string"
                },
                "discount_price": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "response.ProductDetails": {
            "type": "object",
            "properties": {
                "Price_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Prices"
                    }
                },
                "category_Name": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "qty_in_stock": {
                    "type": "integer"
                },
                "stock_status": {
                    "type": "boolean"
                }
            }
        },
        "response.UserDetails": {
            "type": "object",
            "properties": {
                "Orders_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Orders1"
                    }
                },
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "block_status": {
                    "type": "boolean"
                },
                "district": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "muncipality": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "response.WHistoty": {
            "type": "object",
            "properties": {
                "added_at": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "razorpay_payment_id": {
                    "type": "string"
                }
            }
        },
        "response.WalletRes": {
            "type": "object",
            "properties": {
                "balence": {
                    "type": "number"
                },
                "historys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.WHistoty"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
